name: Build Android APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y build-essential git unzip
        sudo apt install -y autoconf automake libtool pkg-config
        sudo apt install -y zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev
        sudo apt install -y libreadline-dev libsqlite3-dev libssl-dev libffi-dev
    
    - name: Install Python dependencies
      run: |
        pip install --upgrade pip
        pip install buildozer
        pip install cython==0.29.33
    
    - name: Debug project structure
      run: |
        echo "=== PROJECT STRUCTURE ==="
        ls -la
        echo "=== BUILDOZER SPEC CONTENT ==="
        cat buildozer.spec || echo "buildozer.spec not found"
        echo "=== PYTHON FILES ==="
        find . -name "*.py" | head -10
    
    - name: Build APK with detailed logging
      run: |
        echo "Starting buildozer build..."
        
        # Create a simple script to handle the license prompt
        (
          sleep 5
          while true; do
            echo "y"
            sleep 2
          done
        ) &
        LICENSE_PID=$!
        
        # Start the build with full logging
        buildozer android debug 2>&1 | tee build_full.log
        BUILD_EXIT_CODE=${PIPESTATUS[0]}
        
        # Kill the license acceptance process
        kill $LICENSE_PID 2>/dev/null || true
        
        echo "Build exit code: $BUILD_EXIT_CODE"
        
        # Check results
        if [ $BUILD_EXIT_CODE -eq 0 ] && [ -f bin/*.apk 2>/dev/null ]; then
          echo "✅ BUILD SUCCESSFUL!"
        else
          echo "❌ BUILD FAILED!"
          echo "=== LAST 100 LINES OF BUILD LOG ==="
          tail -100 build_full.log
          exit 1
        fi
    
    - name: List build output
      run: |
        echo "=== BIN DIRECTORY ==="
        ls -la bin/ || echo "bin/ directory not found"
        
        echo "=== SEARCHING FOR APK FILES ==="
        find . -name "*.apk" -type f | while read apk; do
          echo "Found APK: $apk"
          ls -lh "$apk"
        done || echo "No APK files found"
    
    - name: Upload APK artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: ASL-Mobile-App-APK
        path: bin/*.apk
        retention-days: 30
    
    - name: Upload build logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: build_full.log
        retention-days: 7

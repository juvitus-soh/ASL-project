name: Build Android APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y build-essential git unzip expect \
          autoconf automake libtool pkg-config zlib1g-dev \
          libncurses5-dev libgdbm-dev libnss3-dev \
          libreadline-dev libsqlite3-dev libssl-dev libffi-dev

    - name: Install Python dependencies
      run: |
        pip install --upgrade pip
        pip install cython==0.29.33 buildozer

    - name: Install Android SDK Command Line Tools
      run: |
        mkdir -p $HOME/android-sdk/cmdline-tools
        cd $HOME/android-sdk/cmdline-tools
        curl -O https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip
        unzip commandlinetools-linux-*.zip
        mv cmdline-tools latest
        mkdir -p $HOME/.buildozer/android/platform
        mv $HOME/android-sdk $HOME/.buildozer/android/platform/android-sdk
        export ANDROID_SDK_ROOT=$HOME/.buildozer/android/platform/android-sdk
        yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=${ANDROID_SDK_ROOT} --licenses
        $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=${ANDROID_SDK_ROOT} --update
        $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=${ANDROID_SDK_ROOT} \
          "platform-tools" "platforms;android-33" "build-tools;33.0.2"

    - name: Debug project structure
      run: |
        echo "=== PROJECT STRUCTURE ==="
        ls -la
        echo "=== BUILDOZER SPEC CONTENT ==="
        cat buildozer.spec || echo "buildozer.spec not found"
        echo "=== PYTHON FILES ==="
        find . -name "*.py" | head -10

    - name: Build APK
      run: |
        export ANDROID_SDK_ROOT=$HOME/.buildozer/android/platform/android-sdk
        buildozer android debug

    - name: List build output
      run: |
        echo "=== BIN DIRECTORY ==="
        ls -la bin/ || echo "bin/ directory not found"
        echo "=== APK FILES FOUND ==="
        find . -name "*.apk" -type f | while read apk; do
          echo "Found APK: $apk"
          ls -lh "$apk"
        done || echo "No APK files found"

    - name: Upload APK artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: ASL-Mobile-App-APK
        path: bin/*.apk
        retention-days: 30

    - name: Upload build logs (if any)
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: .buildozer/android/platform/python-for-android/build/other_builds/*/build.log
        retention-days: 7

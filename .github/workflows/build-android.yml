name: Build Android APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Allows manual trigger

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y build-essential git unzip expect
        sudo apt install -y autoconf automake libtool pkg-config
        sudo apt install -y zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev
        sudo apt install -y libreadline-dev libsqlite3-dev libssl-dev libffi-dev
    
    - name: Install Python dependencies
      run: |
        pip install --upgrade pip
        pip install buildozer
        pip install cython==0.29.33
    
    - name: Build APK with expect to handle license prompts
      run: |
        # Create expect script to handle licenses and capture output
        cat > build_with_expect.sh << 'EOF'
        #!/bin/bash
        set -e  # Exit on any error
        
        expect << 'EXPECT_EOF'
        set timeout 7200
        log_user 1
        spawn buildozer android debug
        expect {
          "Accept? (y/N):" { 
            send "y\r"
            exp_continue 
          }
          "Do you accept the license" { 
            send "y\r"
            exp_continue 
          }
          "(y/N)" { 
            send "y\r"
            exp_continue 
          }
          "# Build failed:" {
            puts "BUILD FAILED!"
            exit 1
          }
          "BUILD SUCCESSFUL" {
            puts "Build completed successfully"
            exit 0
          }
          eof {
            puts "Build process ended"
            exit 0
          }
          timeout { 
            puts "Build timed out after 2 hours"
            exit 1 
          }
        }
        EXPECT_EOF
        EOF
        
        chmod +x build_with_expect.sh
        ./build_with_expect.sh
    
    - name: Check build results and debug
      run: |
        echo "=== BUILD RESULTS ==="
        echo "Checking bin directory:"
        ls -la bin/ || echo "bin/ directory doesn't exist"
        
        echo "Checking for any APK files in project:"
        find . -name "*.apk" -type f || echo "No APK files found anywhere"
        
        echo "Checking buildozer logs:"
        if [ -f .buildozer/android/platform/build-*/*.log ]; then
          echo "Last 50 lines of build log:"
          tail -50 .buildozer/android/platform/build-*/*.log
        fi
        
        echo "Checking for errors in recent logs:"
        if [ -d .buildozer ]; then
          find .buildozer -name "*.log" -mtime -1 -exec echo "=== {} ===" \; -exec tail -20 {} \;
        fi
    
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: ASL-Mobile-App-APK
        path: bin/*.apk
        retention-days: 30
    
    - name: List build output
      run: |
        echo "Build completed successfully!"
        ls -la bin/
        echo "APK size:"
        du -h bin/*.apk
